# BUILDER #

# pull official base image
FROM debian:10.3-slim as builder

# set work directory
WORKDIR /usr/src/washee_web

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get autoremove -y \
    && apt-get install -y \
      gcc \
      python3 \
      build-essential \
      zlib1g-dev \
      wget \
      unzip \
      cmake \
      python3-dev \
      python3-pip \
      python3-numpy \
      python3-pandas \
      gfortran \
      libssl-dev \
      libffi-dev \
      libc6 \
      libblas-dev \
      liblapack-dev \
      libatlas-base-dev \
      libpq-dev \
    && apt-get clean
RUN apt install -y netcat

# Install 
RUN pip3 install --upgrade pip
COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip3 wheel --no-cache-dir --no-deps --wheel-dir /usr/src/washee_web/wheels -r requirements.txt

# FINAL #

# pull official base image
FROM debian:10.3-slim

# create directory for the app user
RUN mkdir -p /home/washee_web

# create the washee_web user
RUN adduser --system --group washee_web

# create the appropriate directories
ENV HOME=/home/washee_web
ENV APP_HOME=/home/washee_web/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get autoremove -y \
    && apt-get install -y \
      gcc \
      python3 \
      build-essential \
      zlib1g-dev \
      wget \
      unzip \
      cmake \
      python3-dev \
      python3-pip \
      python3-numpy \
      python3-pandas \
      gfortran \
      libssl-dev \
      libffi-dev \
      libc6 \
      libblas-dev \
      liblapack-dev \
      libatlas-base-dev \
      libpq-dev \
    && apt-get clean
RUN apt install -y netcat
 
COPY --from=builder /usr/src/washee_web/wheels /wheels
COPY --from=builder /usr/src/washee_web/requirements.txt .

# Install wheels made by the builder
RUN pip3 install --upgrade pip
RUN pip3 install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R washee_web:washee_web $APP_HOME

# change to the washee_web user
USER washee_web

# run entrypoint.prod.sh
ENTRYPOINT ["/home/washee_web/web/entrypoint.prod.sh"]
