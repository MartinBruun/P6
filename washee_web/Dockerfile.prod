# BUILDER #

# pull official base image
FROM python:3.7.6-slim as builder

# set work directory
WORKDIR /usr/src/washee_web

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
    && apt install -y netcat \
    && apt-get install -y\
    build-essential libssl-dev libffi-dev libblas3 libc6 liblapack3 gcc python3-dev python3-pip cython libpq-dev gcc jq \
    unzip

# lint
RUN pip install --upgrade pip
COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/washee_web/wheels -r requirements.txt

# FINAL #

# pull official base image
FROM python:3.7.6-slim

# create directory for the app user
RUN mkdir -p /home/washee_web

# create the washee_web user
RUN adduser --system --group washee_web

# create the appropriate directories
ENV HOME=/home/washee_web
ENV APP_HOME=/home/washee_web/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install psycopg2 dependencies
RUN apt-get update \
    && apt install -y netcat \
    && apt-get install -y\
    build-essential libssl-dev libffi-dev libblas3 libc6 liblapack3 gcc python3-dev python3-pip cython libpq-dev gcc jq \
    unzip
COPY --from=builder /usr/src/washee_web/wheels /wheels
COPY --from=builder /usr/src/washee_web/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R washee_web:washee_web $APP_HOME

# change to the washee_web user
USER washee_web

# run entrypoint.prod.sh
ENTRYPOINT ["/home/washee_web/web/entrypoint.prod.sh"]
