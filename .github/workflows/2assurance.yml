name: Assurance

# General assurance continious delivery testing
# Assurance testing are slow end-to-end, acceptance, performance, security, etc. tests

on:
  pull_request:
  workflow_run:
    workflows: [App Confidence, Box Confidence, Web Confidence]
    types:
      - completed

jobs:
  assurance:
    runs-on: macos-latest

    steps:
    #- name: Check a previous run succeeded
    #  if: ${{ github.event.workflow_run.conclusion != 'success' }}
    #  uses: actions/github-script@v3
    #  with:
    #    script: |
    #      core.setFailed('At least one previous event did not succeed. Will not run Assurance Testing because of that.')
    # SETUP
    - uses: actions/checkout@v2

    - uses: docker-practice/actions-setup-docker@master
    
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # 'dev', 'alpha', or 'stable' default to: 'stable'
        flutter-version: '3.0.2' # set to the flutter version of MartinBruun due to previous errors
    
    - name: Necessary App environment files
      working-directory: ./washee_app
      run: |
        echo "WEB_API_HOST=http://localhost:8000" > .env.dev
        echo "BOX_API_HOST=http://localhost:8001" >> .env.dev
        echo "BOX_WIFI_SSID=boxNetworkName" >> .env.dev
        echo "BOX_WIFI_PASSWORD=boxNetworkPassword" >> .env.dev
        echo "BOX_HAS_INTERNET=true" >> .env.dev
        echo "Necessary production environment to satisfy flutter assets" > .env.prod

    # SHOULD be a production looking build it starts up instead!
    - name: Startup all containers
      run: |
        docker-compose up -d --build

    # TESTING

    # THIS IS NOT WORKING as of now!
    - name: Start an Android Emulator and Run App Integration Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        profile: pixel
        disable-animations: true
        working-directory: ./washee_app
        script: flutter test integration_test

    # NEEDS a renaming of "integration test" to "assurance test" for app
    # NEEDS Web Assurance test setup
    # NEEDS Box Assurance test setup
    # Shell scripts called "assurance_test" should hold all the logic for assuring the outcome is in a releaseable state
    # (Releaseable state => the branch can be the new production release in under 5 seconds)

    # SHOULD be a production looking build it tears down instead!
    - name: Finish testing and Clean Up
      run: |
        docker-compose down -v

    - name: Assurance Testing Should Fail
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Assurance Testing is not setup properly, so should fail!')