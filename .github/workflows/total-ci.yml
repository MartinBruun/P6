name: Total CI
# If possible, should be replaced with the best_ci_but_not_working if possible down the line

on:
  pull_request:

env:
  WEB_MIN_COVERAGE: 75
  BOX_MIN_COVERAGE: 43

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1 # For App
      with:
        java-version: '8.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', or 'stable' default to: 'stable'
        flutter-version: '2.10.5' # set to the flutter version of MartinBruun due to previous errors

    - name: (Build) Build all
      run: |
        docker-compose up -d --build

    - name: (Web CI) Check for linting before running tests
      uses: py-actions/flake8@v2
      with:
          path: "washee_web"
          max-line-length: 9000

    - name: (Web CI) Run Tests
      working-directory: ./washee_web
      run: |
        docker-compose exec -T web pytest --cov=. --cov-fail-under=$WEB_MIN_COVERAGE

    - name: (Box CI) Check for linting before running tests
      uses: py-actions/flake8@v2
      with:
        path: "washee_box"
        max-line-length: 9000

    - name: (Box CI) Run Tests
      run: |
        docker-compose exec -T box python3 -m pytest --cov=. --cov-fail-under=$BOX_MIN_COVERAGE

    - name: (App CI) Setup necessary environment files
      working-directory: ./washee_app
      run: |
        echo "WEB_API_HOST=http://localhost:8000" > .env.dev
        echo "BOX_API_HOST=http://localhost:8001" >> .env.dev
        echo "BOX_WIFI_SSID=boxNetworkName" >> .env.dev
        echo "BOX_WIFI_PASSWORD=boxNetworkPassword" >> .env.dev
        echo "BOX_HAS_INTERNET=true" >> .env.dev
        echo "Necessary production environment to satisfy flutter assets" > .env.prod

    - name: (App CI) Lint according to analysis_options.yaml rules
      working-directory: ./washee_app
      run: |
        flutter analyze

    - name: (App CI) Run flutter tests and check for minimum coverage afterwards
      working-directory: ./washee_app
      run: |
        flutter clean
        flutter pub get
        flutter test --coverage

    - uses: VGVentures/very-good-coverage@v1.1.1
      with:
        path: "./washee_app/coverage/lcov.info"
        min_coverage: 13
        exclude: "**/*_observer.dart **/change.dart"

    - name: (App CI) Go into washee_app directory
      run: cd washee_app

    - name: (App CI) Start an Android Emulator and Run Integration Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        profile: pixel
        script: |
          flutter drive --driver=test_driver/android_driver.dart --target=integration_test/account_test.dart

    - name: (Done) Tear down
      run: |
        docker-compose down -v